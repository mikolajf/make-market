[project]
name = "make-market"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "dataclasses-avroschema[faker]>=0.65.4",
    "pydantic-settings>=2.6.0",
    "pyzmq>=26.2.0",
    "tornado>=6.4.1",
    "websockets>=13.1",
    "yfinance>=0.2.48",
    "zmq>=0.0.0",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.12.0",
    "polylith-cli>=1.20.1",
    "pytest-asyncio>=0.24.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.3",
    "ruff>=0.6.9",
    "pytest-mock>=3.14.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
dev-mode-dirs = ["components", "bases", "development", "."]

[tool.ruff]
exclude = [
    ".git",
    ".github",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    "dist",
    ".venv",
    "./development/*.py",
]
line-length = 88

[tool.ruff.lint]
select = [
    "ALL", # include all the rules, including new ones
]
ignore = [
    #### modules
    "ANN", # flake8-annotations
    "COM", # flake8-commas
    "C90", # mccabe complexity
    "DJ",  # django
    "EXE", # flake8-executable
    "T10", # debugger
    "TID", # flake8-tidy-imports


    #### specific rules
    "ASYNC110",
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line with quotes
    "D205",  # 1 blank line required between summary line and description
    "D203",  # No blank lines allowed before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D415",  # First line should end with a period, question mark, or exclamation point
    "E402",   # false positives for local imports
    "E501",   # line too long
    "EM101",
    "G004",
    "TRY003", # external messages in exceptions are too verbose
    "TD002",
    "TD003",
    "FIX002", # too verbose descriptions of todos,
    "S101",   # ignore use of assert
    "PLR2004", # ignore use of print
    "ISC001"
]

[tool.ruff.lint.extend-per-file-ignores]
"test/**/*.py" = [
    # at least this three should be fine in tests:
    "D101",
    "D102",
    "D103", # Missing docstring in public function
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.11"
exclude = [
  "development/*",
]
